/*! For license information please see e3d38960.b7527b80.js.LICENSE.txt */
"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[4410],{2525:function(e){var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach((function(e){o[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(r){return!1}}()?Object.assign:function(e,i){for(var s,a,l=r(e),c=1;c<arguments.length;c++){for(var d in s=Object(arguments[c]))n.call(s,d)&&(l[d]=s[d]);if(t){a=t(s);for(var u=0;u<a.length;u++)o.call(s,a[u])&&(l[a[u]]=s[a[u]])}}return l}},1535:function(e,t,n){var o=n(2525),r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,s=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,c=r?Symbol.for("react.profiler"):60114,d=r?Symbol.for("react.provider"):60109,u=r?Symbol.for("react.context"):60110,p=r?Symbol.for("react.forward_ref"):60112,f=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var _={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function w(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||_}function k(){}function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||_}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var T=v.prototype=new k;T.constructor=v,o(T,w.prototype),T.isPureReactComponent=!0;var x={current:null},S=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var o,r={},s=null,a=null;if(null!=t)for(o in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(s=""+t.key),t)S.call(t,o)&&!I.hasOwnProperty(o)&&(r[o]=t[o]);var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];r.children=c}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===r[o]&&(r[o]=l[o]);return{$$typeof:i,type:e,key:s,ref:a,props:r,_owner:x.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var A=/\/+/g,C=[];function R(e,t,n,o){if(C.length){var r=C.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=o,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:o,count:0}}function E(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function D(e,t,n,o){var r=typeof e;"undefined"!==r&&"boolean"!==r||(e=null);var a=!1;if(null===e)a=!0;else switch(r){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case s:a=!0}}if(a)return n(o,e,""===t?"."+M(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){var c=t+M(r=e[l],l);a+=D(r,c,n,o)}else if(null===e||"object"!=typeof e?c=null:c="function"==typeof(c=g&&e[g]||e["@@iterator"])?c:null,"function"==typeof c)for(e=c.call(e),l=0;!(r=e.next()).done;)a+=D(r=r.value,c=t+M(r,l++),n,o);else if("object"===r)throw n=""+e,Error(b(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function B(e,t,n){return null==e?0:D(e,"",t,n)}function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function j(e,t,n){var o=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,o,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(A,"$&/")+"/")+n)),o.push(e))}function U(e,t,n,o,r){var i="";null!=n&&(i=(""+n).replace(A,"$&/")+"/"),B(e,j,t=R(t,i,o,r)),E(t)}var z={current:null};function G(){var e=z.current;if(null===e)throw Error(b(321));return e}},7378:function(e,t,n){n(1535)},4137:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,h=p["".concat(l,".").concat(f)]||p[f]||u[f]||i;return n?o.createElement(h,s(s({ref:t},d),{},{components:n})):o.createElement(h,s({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9188:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return b},default:function(){return k},frontMatter:function(){return g},metadata:function(){return _},toc:function(){return m}});var o=n(7462),r=n(3366),i=(n(7378),n(4137)),s=["components"],a={toc:[]};function l(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# Unstructured settings\n\napp_directory: "" # the directory containing app binary files to host type: string\nauto_migrate_db: true # If true, attempt to automigrate the db when connecting type: bool\nauto_migrate_db_and_exit: false # If true, attempt to automigrate the db when connecting, then exit the program. type: bool\ncache_stats_finalization_delay: 500ms # The time allowed for all metrics collectors across all apps to flush their local cache stats to the backing storage, before finalizing stats in the DB. type: time.Duration\ncleanup_interval: 10m0s # How often the janitor cleanup tasks will run type: time.Duration\ncleanup_workers: 1 # How many cleanup tasks to run type: int\ndisable_ga: false # If true; ga will be disabled type: bool\ndisable_telemetry: false # If true; telemetry will be disabled type: bool\ndrop_invocation_pk_cols: false # If true, attempt to drop invocation PK cols type: bool\nexit_when_ready: false # If set, the app will exit as soon as it becomes ready (useful for migrations) type: bool\ngrpc_port: 1985 # The port to listen for gRPC traffic on type: int\ngrpcs_port: 1986 # The port to listen for gRPCS traffic on type: int\njs_entry_point_path: /app/app_bundle/app.js?hash={APP_BUNDLE_HASH} # Absolute URL path of the app JS entry point type: string\nlisten: 0.0.0.0 # The interface to listen on (default: 0.0.0.0) type: string\nlog_deletion_errors: false # If true; log errors when ttl-deleting expired data type: bool\nmax_shutdown_duration: 25s # Time to wait for shutdown type: time.Duration\nmigrate_disk_cache_to_v2_and_exit: false # If true, attempt to migrate disk cache to v2 layout. type: bool\nmonitoring_port: 9090 # The port to listen for monitoring traffic on type: int\nport: 8080 # The port to listen for HTTP traffic on type: int\nserver_type: buildbuddy-server # The server type to match on health checks type: string\nssl_port: 8081 # The port to listen for HTTPS traffic on type: int\nstatic_directory: "" # the directory containing static files to host type: string\ntelemetry_endpoint: grpcs://t.buildbuddy.io:443 # The telemetry endpoint to use type: string\ntelemetry_interval: 24h0m0s # How often telemetry data will be reported type: time.Duration\nverbose_telemetry_client: false # If true; print telemetry client information type: bool\n\n# Structured settings\n\napi:\n    api_key: "" # The default API key to use for on-prem enterprise deploys with a single organization/group. type: string\n    enable_api: true # Whether or not to enable the BuildBuddy API. type: bool\n    enable_cache: false # Whether or not to enable the API cache. type: bool\napp:\n    build_buddy_url: http://localhost:8080 # The external URL where your BuildBuddy instance can be found. type: URL\n    cache_api_url: "" # Overrides the default remote cache protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    code_editor_enabled: false # If set, code editor functionality will be enabled. type: bool\n    default_to_dense_mode: false # Enables the dense UI mode by default. type: bool\n    disable_cert_config: false # If true, the certificate based auth option will not be shown in the config widget. type: bool\n    enable_prometheus_histograms: true # If true, collect prometheus histograms for all RPCs type: bool\n    enable_structured_logging: false # If true, log messages will be json-formatted. type: bool\n    enable_target_tracking: false # Cloud-Only type: bool\n    events_api_url: "" # Overrides the default build event protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    expanded_suggestions_enabled: false # If set, enable more build suggestions in the UI. type: bool\n    global_filter_enabled: true # If set, the global filter will be enabled in the UI. type: bool\n    grpc_max_recv_msg_size_bytes: 50000000 # Configures the max GRPC receive message size [bytes] type: int\n    grpc_over_http_port_enabled: false # Cloud-Only type: bool\n    ignore_forced_tracing_header: false # If set, we will not honor the forced tracing header. type: bool\n    log_enable_gcp_logging_format: false # If true, the output structured logs will be compatible with format expected by GCP Logging. type: bool\n    log_error_stack_traces: false # If true, stack traces will be printed for errors that have them. type: bool\n    log_include_short_file_name: false # If true, log messages will include shortened originating file name. type: bool\n    log_level: info # The desired log level. Logs with a level >= this level will be emitted. One of {\'fatal\', \'error\', \'warn\', \'info\', \'debug\'} type: string\n    remote_execution_api_url: "" # Overrides the default remote execution protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    test_grid_v2_enabled: true # Whether to enable test grid V2 type: bool\n    trace_fraction: 0 # Fraction of requests to sample for tracing. type: float64\n    trace_fraction_overrides: [] # Tracing fraction override based on name in format name=fraction. type: []string\n    trace_jaeger_collector: "" # Address of the Jager collector endpoint where traces will be sent. type: string\n    trace_project_id: "" # Optional GCP project ID to export traces to. If not specified, determined from default credentials or metadata server if running on GCP. type: string\n    trace_service_name: "" # Name of the service to associate with traces. type: string\n    usage_enabled: false # If set, the usage page will be enabled in the UI. type: bool\n    user_management_enabled: true # If set, the user management page will be enabled in the UI. type: bool\nbuild_event_proxy:\n    buffer_size: 100 # The number of build events to buffer locally when proxying build events. type: int\n    hosts: [] # The list of hosts to pass build events onto. type: []string\ncache:\n    detailed_stats_enabled: false # Whether to enable detailed stats recording for all cache requests. type: bool\n    disk:\n        partition_mappings: [] # type: []disk.PartitionMapping\n        # e.g.,\n        # - group_id: "" # The Group ID to which this mapping applies. type: string\n        #   prefix: "" # The remote instance name prefix used to select this partition. type: string\n        #   partition_id: "" # The partition to use if the Group ID and prefix match. type: string\n\n        partitions: [] # type: []disk.Partition\n        # e.g.,\n        # - id: "" # The ID of the partition. type: string\n        #   max_size_bytes: 0 # Maximum size of the partition. type: int64\n\n        root_directory: "" # The root directory to store all blobs in, if using disk based storage. type: string\n        use_v2_layout: false # If enabled, files will be stored using the v2 layout. See disk_cache.MigrateToV2Layout for a description. type: bool\n    enable_query_write_status_cache_check: false # If enabled, QueryWriteStatus ByteStream RPC will check whether digest is present in the cache. type: bool\n    enable_tree_caching: true # If true, cache GetTree responses (full and partial) type: bool\n    in_memory: false # Whether or not to use the in_memory cache. type: bool\n    max_size_bytes: 10000000000 # How big to allow the cache to be (in bytes). type: int64\n    tree_cache_seed: treecache # If set, hash this with digests before caching / reading from tree cache type: string\n    zstd_transcoding_enabled: false # Whether to accept requests to read/write zstd-compressed blobs, compressing/decompressing outgoing/incoming blobs on the fly. type: bool\ndatabase:\n    conn_max_lifetime_seconds: 0 # The maximum lifetime of a connection to the db type: int\n    data_source: sqlite3:///tmp/buildbuddy.db # The SQL database to connect to, specified as a connection string. type: string\n    log_queries: false # If true, log all queries type: bool\n    max_idle_conns: 0 # The maximum number of idle connections to maintain to the db type: int\n    max_open_conns: 0 # The maximum number of open connections to maintain to the db type: int\n    read_replica: "" # A secondary, read-only SQL database to connect to, specified as a connection string. type: string\n    stats_poll_interval: 5s # How often to poll the DB client for connection stats (default: \'5s\'). type: time.Duration\ngithub:\n    access_token: "" # The GitHub access token used to post GitHub commit statuses. ** Enterprise only ** type: string\n    client_id: "" # The client ID of your GitHub Oauth App. ** Enterprise only ** type: string\n    client_secret: "" # The client secret of your GitHub Oauth App. ** Enterprise only ** type: string\n    status_name_suffix: "" # Suffix to be appended to all reported GitHub status names. Useful for differentiating BuildBuddy deployments. For example: \'(dev)\' ** Enterprise only ** type: string\n    status_per_test_target: false # If true, report status per test target. ** Enterprise only ** type: bool\nintegrations:\n    invocation_upload:\n        enabled: false # Whether to upload webhook data to the webhook URL configured per-Group. ** Enterprise only ** type: bool\n        gcs_credentials: "" # Credentials JSON for the Google service account used to authenticate when GCS is used as the invocation upload target. ** Enterprise only ** type: string\n    slack:\n        webhook_url: "" # A Slack webhook url to post build update messages to. type: string\nremote_execution:\n    enable_executor_key_creation: false # If enabled, UI will allow executor keys to be created. type: bool\n    enable_remote_exec: true # If true, enable remote-exec. ** Enterprise only ** type: bool\n    enable_user_owned_executors: false # If enabled, users can register their own executors with the scheduler. type: bool\n    enable_workflows: false # Whether to enable BuildBuddy workflows. type: bool\n    force_user_owned_darwin_executors: false # If enabled, darwin actions will always run on user-owned executors. type: bool\nssl:\n    cert_file: "" # Path to a PEM encoded certificate file to use for TLS if not using ACME. type: string\n    client_ca_cert_file: "" # Path to a PEM encoded certificate authority file used to issue client certificates for mTLS auth. type: string\n    client_ca_key_file: "" # Path to a PEM encoded certificate authority key file used to issue client certificates for mTLS auth. type: string\n    default_host: "" # Host name to use for ACME generated cert if TLS request does not contain SNI. type: string\n    enable_ssl: false # Whether or not to enable SSL/TLS on gRPC connections (gRPCS). type: bool\n    host_whitelist: [] # Cloud-Only type: []string\n    key_file: "" # Path to a PEM encoded key file to use for TLS if not using ACME. type: string\n    self_signed: false # If true, a self-signed cert will be generated for TLS termination. type: bool\n    upgrade_insecure: false # True if http requests should be redirected to https type: bool\n    use_acme: false # Whether or not to automatically configure SSL certs using ACME. If ACME is enabled, cert_file and key_file should not be set. type: bool\nstorage:\n    aws_s3:\n        bucket: "" # The AWS S3 bucket to store files in. type: string\n        credentials_profile: "" # A custom credentials profile to use. type: string\n        disable_ssl: false # Disables the use of SSL, useful for configuring the use of MinIO. type: bool\n        endpoint: "" # The AWS endpoint to use, useful for configuring the use of MinIO. type: string\n        region: "" # The AWS region. type: string\n        role_arn: "" # The role ARN to use for web identity auth. type: string\n        role_session_name: "" # The role session name to use for web identity auth. type: string\n        s3_force_path_style: false # Force path style urls for objects, useful for configuring the use of MinIO. type: bool\n        static_credentials_id: "" # Static credentials ID to use, useful for configuring the use of MinIO. type: string\n        static_credentials_secret: "" # Static credentials secret to use, useful for configuring the use of MinIO. type: string\n        static_credentials_token: "" # Static credentials token to use, useful for configuring the use of MinIO. type: string\n        web_identity_token_file: "" # The file path to the web identity token file. type: string\n    azure:\n        account_key: "" # The key for the Azure storage account type: string\n        account_name: "" # The name of the Azure storage account type: string\n        container_name: "" # The name of the Azure storage container type: string\n    chunk_file_size_bytes: 3000000 # How many bytes to buffer in memory before flushing a chunk of build protocol data to disk. type: int\n    disk:\n        root_directory: /tmp/buildbuddy # The root directory to store all blobs in, if using disk based storage. type: string\n        use_v2_layout: false # If enabled, files will be stored using the v2 layout. See disk_cache.MigrateToV2Layout for a description. type: bool\n    enable_chunked_event_logs: false # If true, Event logs will be stored separately from the invocation proto in chunks. type: bool\n    gcs:\n        bucket: "" # The name of the GCS bucket to store build artifact files in. type: string\n        credentials_file: "" # A path to a JSON credentials file that will be used to authenticate to GCS. type: string\n        project_id: "" # The Google Cloud project ID of the project owning the above credentials and GCS bucket. type: string\n    ttl_seconds: 0 # The time, in seconds, to keep invocations before deletion. 0 disables invocation deletion. type: int\n')))}l.isMDXComponent=!0;var c=["components"],d={toc:[]};function u(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# Unstructured settings\n\napp_directory: "" # the directory containing app binary files to host type: string\nauto_migrate_db: true # If true, attempt to automigrate the db when connecting type: bool\nauto_migrate_db_and_exit: false # If true, attempt to automigrate the db when connecting, then exit the program. type: bool\ncache_stats_finalization_delay: 500ms # The time allowed for all metrics collectors across all apps to flush their local cache stats to the backing storage, before finalizing stats in the DB. type: time.Duration\ncleanup_interval: 10m0s # How often the janitor cleanup tasks will run type: time.Duration\ncleanup_workers: 1 # How many cleanup tasks to run type: int\ndisable_ga: false # If true; ga will be disabled type: bool\ndisable_telemetry: false # If true; telemetry will be disabled type: bool\ndrop_invocation_pk_cols: false # If true, attempt to drop invocation PK cols type: bool\nexit_when_ready: false # If set, the app will exit as soon as it becomes ready (useful for migrations) type: bool\ngrpc_port: 1985 # The port to listen for gRPC traffic on type: int\ngrpcs_port: 1986 # The port to listen for gRPCS traffic on type: int\njs_entry_point_path: /app/app_bundle/app.js?hash={APP_BUNDLE_HASH} # Absolute URL path of the app JS entry point type: string\nlisten: 0.0.0.0 # The interface to listen on (default: 0.0.0.0) type: string\nlog_deletion_errors: false # If true; log errors when ttl-deleting expired data type: bool\nmax_shutdown_duration: 25s # Time to wait for shutdown type: time.Duration\nmigrate_disk_cache_to_v2_and_exit: false # If true, attempt to migrate disk cache to v2 layout. type: bool\nmonitoring_port: 9090 # The port to listen for monitoring traffic on type: int\nport: 8080 # The port to listen for HTTP traffic on type: int\nredis_command_buffer_flush_period: 250ms # How long to wait between flushing buffered redis commands. Setting this to 0 will disable buffering at the cost of higher redis QPS. type: time.Duration\nserver_type: buildbuddy-server # The server type to match on health checks type: string\nssl_port: 8081 # The port to listen for HTTPS traffic on type: int\nstatic_directory: "" # the directory containing static files to host type: string\ntelemetry_endpoint: grpcs://t.buildbuddy.io:443 # The telemetry endpoint to use type: string\ntelemetry_interval: 24h0m0s # How often telemetry data will be reported type: time.Duration\ntelemetry_port: 9099 # The port on which to listen for telemetry events type: int\nverbose_telemetry_client: false # If true; print telemetry client information type: bool\nverbose_telemetry_server: false # If true; print telemetry server information type: bool\nzone_override: "" # A value that will override the auto-detected zone. Ignored if empty type: string\n\n# Structured settings\n\napi:\n    api_key: "" # The default API key to use for on-prem enterprise deploys with a single organization/group. type: string\n    enable_api: true # Whether or not to enable the BuildBuddy API. type: bool\n    enable_cache: false # Whether or not to enable the API cache. type: bool\napp:\n    add_user_to_domain_group: false # Cloud-Only type: bool\n    build_buddy_url: http://localhost:8080 # The external URL where your BuildBuddy instance can be found. type: URL\n    cache_api_url: "" # Overrides the default remote cache protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    code_editor_enabled: false # If set, code editor functionality will be enabled. type: bool\n    create_group_per_user: false # Cloud-Only type: bool\n    default_redis_target: "" # A Redis target for storing remote shared state. To ease migration, the redis target from the remote execution config will be used if this value is not specified. type: string\n    default_sharded_redis:\n        password: "" # Redis password type: string\n        shards: [] # Ordered list of Redis shard addresses. type: []string\n        username: "" # Redis username type: string\n    default_to_dense_mode: false # Enables the dense UI mode by default. type: bool\n    disable_cert_config: false # If true, the certificate based auth option will not be shown in the config widget. type: bool\n    enable_prometheus_histograms: true # If true, collect prometheus histograms for all RPCs type: bool\n    enable_quota_management: false # If set, quota management will be enabled type: bool\n    enable_structured_logging: false # If true, log messages will be json-formatted. type: bool\n    enable_target_tracking: false # Cloud-Only type: bool\n    events_api_url: "" # Overrides the default build event protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    expanded_suggestions_enabled: false # If set, enable more build suggestions in the UI. type: bool\n    global_filter_enabled: true # If set, the global filter will be enabled in the UI. type: bool\n    grpc_max_recv_msg_size_bytes: 50000000 # Configures the max GRPC receive message size [bytes] type: int\n    grpc_over_http_port_enabled: false # Cloud-Only type: bool\n    ignore_forced_tracing_header: false # If set, we will not honor the forced tracing header. type: bool\n    log_enable_gcp_logging_format: false # If true, the output structured logs will be compatible with format expected by GCP Logging. type: bool\n    log_error_stack_traces: false # If true, stack traces will be printed for errors that have them. type: bool\n    log_include_short_file_name: false # If true, log messages will include shortened originating file name. type: bool\n    log_level: info # The desired log level. Logs with a level >= this level will be emitted. One of {\'fatal\', \'error\', \'warn\', \'info\', \'debug\'} type: string\n    no_default_user_group: false # Cloud-Only type: bool\n    region: "" # The region in which the app is running. type: string\n    remote_execution_api_url: "" # Overrides the default remote execution protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    test_grid_v2_enabled: true # Whether to enable test grid V2 type: bool\n    trace_fraction: 0 # Fraction of requests to sample for tracing. type: float64\n    trace_fraction_overrides: [] # Tracing fraction override based on name in format name=fraction. type: []string\n    trace_jaeger_collector: "" # Address of the Jager collector endpoint where traces will be sent. type: string\n    trace_project_id: "" # Optional GCP project ID to export traces to. If not specified, determined from default credentials or metadata server if running on GCP. type: string\n    trace_service_name: "" # Name of the service to associate with traces. type: string\n    usage_enabled: false # If set, the usage page will be enabled in the UI. type: bool\n    usage_start_date: "" # If set, usage data will only be viewable on or after this timestamp. Specified in RFC3339 format, like 2021-10-01T00:00:00Z type: string\n    usage_tracking_enabled: false # If set, enable usage data collection. type: bool\n    user_management_enabled: true # If set, the user management page will be enabled in the UI. type: bool\nauth:\n    admin_group_id: "" # ID of a group whose members can perform actions only accessible to server admins. type: string\n    api_key_group_cache_ttl: 5m0s # TTL for API Key to Group caching. Set to \'0\' to disable cache. type: time.Duration\n    disable_refresh_token: false # If true, the offline_access scope which requests refresh tokens will not be requested. type: bool\n    enable_anonymous_usage: false # If true, unauthenticated build uploads will still be allowed but won\'t be associated with your organization. type: bool\n    enable_self_auth: false # If true, enables a single user login via an oauth provider on the buildbuddy server. Recommend use only when server is behind a firewall; this option may allow anyone with access to the webpage admin rights to your buildbuddy installation. ** Enterprise only ** type: bool\n    https_only_cookies: false # If true, cookies will only be set over https connections. type: bool\n    jwt_key: set_the_jwt_in_config # The key to use when signing JWT tokens. type: string\n    oauth_providers: [] # The list of oauth providers to use to authenticate. type: []auth.OauthProvider\n    # e.g.,\n    # - issuer_url: "" # The issuer URL of this OIDC Provider. type: string\n    #   client_id: "" # The oauth client ID. type: string\n    #   client_secret: "" # The oauth client secret. type: string\n    #   slug: "" # The slug of this OIDC Provider. type: string\n\n    saml:\n        cert_file: "" # Path to a PEM encoded certificate file used for SAML auth. type: string\n        key_file: "" # Path to a PEM encoded certificate key file used for SAML auth. type: string\nbuild_event_proxy:\n    buffer_size: 100 # The number of build events to buffer locally when proxying build events. type: int\n    hosts: [] # The list of hosts to pass build events onto. type: []string\ncache:\n    detailed_stats_enabled: false # Whether to enable detailed stats recording for all cache requests. type: bool\n    disk:\n        partition_mappings: [] # type: []disk.PartitionMapping\n        # e.g.,\n        # - group_id: "" # The Group ID to which this mapping applies. type: string\n        #   prefix: "" # The remote instance name prefix used to select this partition. type: string\n        #   partition_id: "" # The partition to use if the Group ID and prefix match. type: string\n\n        partitions: [] # type: []disk.Partition\n        # e.g.,\n        # - id: "" # The ID of the partition. type: string\n        #   max_size_bytes: 0 # Maximum size of the partition. type: int64\n\n        root_directory: "" # The root directory to store all blobs in, if using disk based storage. type: string\n        use_v2_layout: false # If enabled, files will be stored using the v2 layout. See disk_cache.MigrateToV2Layout for a description. type: bool\n    distributed_cache:\n        cluster_size: 0 # The total number of nodes in this cluster. Required for health checking. ** Enterprise only ** type: int\n        enable_local_writes: false # If enabled, shortcuts distributed writes that belong to the local shard to local cache instead of making an RPC. type: bool\n        group_name: "" # A unique name for this distributed cache group. ** Enterprise only ** type: string\n        listen_addr: "" # The address to listen for local BuildBuddy distributed cache traffic on. type: string\n        nodes: [] # The hardcoded list of peer distributed cache nodes. If this is set, redis_target will be ignored. ** Enterprise only ** type: []string\n        redis_target: "" # A redis target for improved Caching/RBE performance. Target can be provided as either a redis connection URI or a host:port pair. URI schemas supported: redis[s]://[[USER][:PASSWORD]@][HOST][:PORT][/DATABASE] or unix://[[USER][:PASSWORD]@]SOCKET_PATH[?db=DATABASE] ** Enterprise only ** type: string\n        replication_factor: 0 # How many total servers the data should be replicated to. Must be >= 1. ** Enterprise only ** type: int\n    enable_query_write_status_cache_check: false # If enabled, QueryWriteStatus ByteStream RPC will check whether digest is present in the cache. type: bool\n    enable_tree_caching: true # If true, cache GetTree responses (full and partial) type: bool\n    gcs:\n        bucket: "" # The name of the GCS bucket to store cache files in. type: string\n        credentials_file: "" # A path to a JSON credentials file that will be used to authenticate to GCS. type: string\n        project_id: "" # The Google Cloud project ID of the project owning the above credentials and GCS bucket. type: string\n        ttl_days: 0 # The period after which cache files should be TTLd. Disabled if 0. type: int64\n    in_memory: false # Whether or not to use the in_memory cache. type: bool\n    max_size_bytes: 10000000000 # How big to allow the cache to be (in bytes). type: int64\n    memcache_targets: [] # Deprecated. Use Redis Target instead. type: []string\n    pebble:\n        block_cache_size_bytes: 1000000000 # How much ram to give the block cache type: int64\n        clear_cache_before_migration: false # If set, clear any existing cache content before migrating type: bool\n        force_allow_migration: false # If set, allow migrating into an existing pebble cache type: bool\n        migrate_from_disk_dir: "" # If set, attempt to migrate this disk dir to a new pebble cache type: string\n        partition_mappings: [] # type: []disk.PartitionMapping\n        # e.g.,\n        # - group_id: "" # The Group ID to which this mapping applies. type: string\n        #   prefix: "" # The remote instance name prefix used to select this partition. type: string\n        #   partition_id: "" # The partition to use if the Group ID and prefix match. type: string\n\n        partitions: [] # type: []disk.Partition\n        # e.g.,\n        # - id: "" # The ID of the partition. type: string\n        #   max_size_bytes: 0 # Maximum size of the partition. type: int64\n\n        root_directory: "" # The root directory to store the database in. type: string\n    raft:\n        grpc_port: 0 # The address to listen for internal API traffic on. Ex. \'1993\' type: int\n        http_port: 0 # The address to listen for HTTP raft traffic. Ex. \'1992\' type: int\n        join: [] # The list of nodes to use when joining clusters Ex. \'1.2.3.4:1991,2.3.4.5:1991...\' type: []string\n        listen_addr: "" # The address to listen for local gossip traffic on. Ex. \'localhost:1991 type: string\n        root_directory: "" # The root directory to use for storing cached data. type: string\n    redis:\n        max_value_size_bytes: 10000000 # The maximum value size to cache in redis (in bytes). type: int64\n        redis_target: "" # A redis target for improved Caching/RBE performance. Target can be provided as either a redis connection URI or a host:port pair. URI schemas supported: redis[s]://[[USER][:PASSWORD]@][HOST][:PORT][/DATABASE] or unix://[[USER][:PASSWORD]@]SOCKET_PATH[?db=DATABASE] ** Enterprise only ** type: string\n        sharded:\n            password: "" # Redis password type: string\n            shards: [] # Ordered list of Redis shard addresses. type: []string\n            username: "" # Redis username type: string\n    redis_target: "" # A redis target for improved Caching/RBE performance. Target can be provided as either a redis connection URI or a host:port pair. URI schemas supported: redis[s]://[[USER][:PASSWORD]@][HOST][:PORT][/DATABASE] or unix://[[USER][:PASSWORD]@]SOCKET_PATH[?db=DATABASE] ** Enterprise only ** type: string\n    s3:\n        bucket: "" # The AWS S3 bucket to store files in. type: string\n        credentials_profile: "" # A custom credentials profile to use. type: string\n        disable_ssl: false # Disables the use of SSL, useful for configuring the use of MinIO. type: bool\n        endpoint: "" # The AWS endpoint to use, useful for configuring the use of MinIO. type: string\n        region: "" # The AWS region. type: string\n        role_arn: "" # The role ARN to use for web identity auth. type: string\n        role_session_name: "" # The role session name to use for web identity auth. type: string\n        s3_force_path_style: false # Force path style urls for objects, useful for configuring the use of MinIO. type: bool\n        static_credentials_id: "" # Static credentials ID to use, useful for configuring the use of MinIO. type: string\n        static_credentials_secret: "" # Static credentials secret to use, useful for configuring the use of MinIO. type: string\n        static_credentials_token: "" # Static credentials token to use, useful for configuring the use of MinIO. type: string\n        ttl_days: 0 # The period after which cache files should be TTLd. Disabled if 0. type: int64\n        web_identity_token_file: "" # The file path to the web identity token file. type: string\n    tree_cache_seed: treecache # If set, hash this with digests before caching / reading from tree cache type: string\n    zstd_transcoding_enabled: false # Whether to accept requests to read/write zstd-compressed blobs, compressing/decompressing outgoing/incoming blobs on the fly. type: bool\ndatabase:\n    conn_max_lifetime_seconds: 0 # The maximum lifetime of a connection to the db type: int\n    data_source: sqlite3:///tmp/buildbuddy.db # The SQL database to connect to, specified as a connection string. type: string\n    log_queries: false # If true, log all queries type: bool\n    max_idle_conns: 0 # The maximum number of idle connections to maintain to the db type: int\n    max_open_conns: 0 # The maximum number of open connections to maintain to the db type: int\n    read_replica: "" # A secondary, read-only SQL database to connect to, specified as a connection string. type: string\n    stats_poll_interval: 5s # How often to poll the DB client for connection stats (default: \'5s\'). type: time.Duration\nexecutor:\n    default_image: gcr.io/flame-public/executor-docker-default:enterprise-v1.6.0 # The default docker image to use to warm up executors or if no platform property is set. Ex: gcr.io/flame-public/executor-docker-default:enterprise-v1.5.4 type: string\n    default_isolation_type: "" # The default workload isolation type when no type is specified in an action. If not set, we use the first of the following that is set: docker, firecracker, podman, or barerunner type: string\n    default_xcode_version: "" # Sets the default Xcode version number to use if an action doesn\'t specify one. If not set, /Applications/Xcode.app/ is used. type: string\n    docker_socket: "" # If set, run execution commands in docker using the provided socket. type: string\n    enable_bare_runner: false # Enables running execution commands directly on the host without isolation. type: bool\n    enable_firecracker: false # Enables running execution commands inside of firecracker VMs type: bool\n    enable_podman: false # Enables running execution commands inside podman container. type: bool\n    enable_sandbox: false # Enables running execution commands inside of sandbox-exec. type: bool\n    enable_vfs: false # Whether FUSE based filesystem is enabled. type: bool\n    extra_env_vars: [] # Additional environment variables to pass to remotely executed actions. i.e. MY_ENV_VAR=foo type: []string\n    memory_bytes: 0 # Optional maximum memory to allocate to execution tasks (approximate). Cannot set both this option and the SYS_MEMORY_BYTES env var. type: int64\n    millicpu: 0 # Optional maximum CPU milliseconds to allocate to execution tasks (approximate). Cannot set both this option and the SYS_MILLICPU env var. type: int64\ngithub:\n    access_token: "" # The GitHub access token used to post GitHub commit statuses. ** Enterprise only ** type: string\n    client_id: "" # The client ID of your GitHub Oauth App. ** Enterprise only ** type: string\n    client_secret: "" # The client secret of your GitHub Oauth App. ** Enterprise only ** type: string\n    status_name_suffix: "" # Suffix to be appended to all reported GitHub status names. Useful for differentiating BuildBuddy deployments. For example: \'(dev)\' ** Enterprise only ** type: string\n    status_per_test_target: false # If true, report status per test target. ** Enterprise only ** type: bool\nintegrations:\n    invocation_upload:\n        enabled: false # Whether to upload webhook data to the webhook URL configured per-Group. ** Enterprise only ** type: bool\n        gcs_credentials: "" # Credentials JSON for the Google service account used to authenticate when GCS is used as the invocation upload target. ** Enterprise only ** type: string\n    slack:\n        webhook_url: "" # A Slack webhook url to post build update messages to. type: string\norg:\n    domain: "" # Your organization\'s email domain. If this is set, only users with email addresses in this domain will be able to register for a BuildBuddy account. type: string\n    name: "" # The name of your organization, which is displayed on your organization\'s build history. type: string\nremote_execution:\n    default_pool_name: "" # The default executor pool to use if one is not specified. type: string\n    enable_action_merging: true # If enabled, identical actions being executed concurrently are merged into a single execution. type: bool\n    enable_executor_key_creation: false # If enabled, UI will allow executor keys to be created. type: bool\n    enable_redis_availability_monitoring: false # If enabled, the execution server will detect if Redis has lost state and will ask Bazel to retry executions. type: bool\n    enable_remote_exec: true # If true, enable remote-exec. ** Enterprise only ** type: bool\n    enable_user_owned_executors: false # If enabled, users can register their own executors with the scheduler. type: bool\n    enable_workflows: false # Whether to enable BuildBuddy workflows. type: bool\n    force_user_owned_darwin_executors: false # If enabled, darwin actions will always run on user-owned executors. type: bool\n    redis_pubsub_pool_size: 10000 # Maximum number of connections used for waiting for execution updates. type: int\n    redis_target: "" # A Redis target for storing remote execution state. Falls back to app.default_redis_target if unspecified. Required for remote execution. To ease migration, the redis target from the cache config will be used if neither this value nor app.default_redis_target are specified. type: string\n    remove_stale_executors: false # If true, executors are removed if they are not heard from for a prolonged amount of time. type: bool\n    require_executor_authorization: false # If true, executors connecting to this server must provide a valid executor API key. type: bool\n    sharded_redis:\n        password: "" # Redis password type: string\n        shards: [] # Ordered list of Redis shard addresses. type: []string\n        username: "" # Redis username type: string\n    shared_executor_pool_group_id: "" # Group ID that owns the shared executor pool. type: string\n    use_measured_task_sizes: false # Whether to use measured usage stats to determine task sizes. type: bool\n    workflows_ci_runner_bazel_command: "" # Bazel command to be used by the CI runner. type: string\n    workflows_ci_runner_debug: false # Whether to run the CI runner in debug mode. type: bool\n    workflows_default_image: "" # The default docker image to use for running workflows. type: string\n    workflows_enable_firecracker: false # Whether to enable firecracker for Linux workflow actions. type: bool\n    workflows_linux_compute_units: 3 # Number of BuildBuddy compute units (BCU) to reserve for Linux workflow actions. type: int\n    workflows_mac_compute_units: 3 # Number of BuildBuddy compute units (BCU) to reserve for Mac workflow actions. type: int\n    workflows_pool_name: "" # The executor pool to use for workflow actions. Defaults to the default executor pool if not specified. type: string\nssl:\n    cert_file: "" # Path to a PEM encoded certificate file to use for TLS if not using ACME. type: string\n    client_ca_cert_file: "" # Path to a PEM encoded certificate authority file used to issue client certificates for mTLS auth. type: string\n    client_ca_key_file: "" # Path to a PEM encoded certificate authority key file used to issue client certificates for mTLS auth. type: string\n    default_host: "" # Host name to use for ACME generated cert if TLS request does not contain SNI. type: string\n    enable_ssl: false # Whether or not to enable SSL/TLS on gRPC connections (gRPCS). type: bool\n    host_whitelist: [] # Cloud-Only type: []string\n    key_file: "" # Path to a PEM encoded key file to use for TLS if not using ACME. type: string\n    self_signed: false # If true, a self-signed cert will be generated for TLS termination. type: bool\n    upgrade_insecure: false # True if http requests should be redirected to https type: bool\n    use_acme: false # Whether or not to automatically configure SSL certs using ACME. If ACME is enabled, cert_file and key_file should not be set. type: bool\nstorage:\n    aws_s3:\n        bucket: "" # The AWS S3 bucket to store files in. type: string\n        credentials_profile: "" # A custom credentials profile to use. type: string\n        disable_ssl: false # Disables the use of SSL, useful for configuring the use of MinIO. type: bool\n        endpoint: "" # The AWS endpoint to use, useful for configuring the use of MinIO. type: string\n        region: "" # The AWS region. type: string\n        role_arn: "" # The role ARN to use for web identity auth. type: string\n        role_session_name: "" # The role session name to use for web identity auth. type: string\n        s3_force_path_style: false # Force path style urls for objects, useful for configuring the use of MinIO. type: bool\n        static_credentials_id: "" # Static credentials ID to use, useful for configuring the use of MinIO. type: string\n        static_credentials_secret: "" # Static credentials secret to use, useful for configuring the use of MinIO. type: string\n        static_credentials_token: "" # Static credentials token to use, useful for configuring the use of MinIO. type: string\n        web_identity_token_file: "" # The file path to the web identity token file. type: string\n    azure:\n        account_key: "" # The key for the Azure storage account type: string\n        account_name: "" # The name of the Azure storage account type: string\n        container_name: "" # The name of the Azure storage container type: string\n    chunk_file_size_bytes: 3000000 # How many bytes to buffer in memory before flushing a chunk of build protocol data to disk. type: int\n    disk:\n        root_directory: /tmp/buildbuddy # The root directory to store all blobs in, if using disk based storage. type: string\n        use_v2_layout: false # If enabled, files will be stored using the v2 layout. See disk_cache.MigrateToV2Layout for a description. type: bool\n    enable_chunked_event_logs: false # If true, Event logs will be stored separately from the invocation proto in chunks. type: bool\n    gcs:\n        bucket: "" # The name of the GCS bucket to store build artifact files in. type: string\n        credentials_file: "" # A path to a JSON credentials file that will be used to authenticate to GCS. type: string\n        project_id: "" # The Google Cloud project ID of the project owning the above credentials and GCS bucket. type: string\n    ttl_seconds: 0 # The time, in seconds, to keep invocations before deletion. 0 disables invocation deletion. type: int\n')))}u.isMDXComponent=!0;var p=["components"],f={toc:[]};function h(e){var t=e.components,n=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# Unstructured settings\n\ndebug_stream_command_outputs: false # If true, stream command outputs to the terminal. Intended for debugging purposes only and should not be used in production. type: bool\ndebug_use_local_images_only: false # Do not pull OCI images and only used locally cached images. This can be set to test local image builds during development without needing to push to a container registry. Not intended for production use. type: bool\ndocker_cap_add: "" # Sets --cap-add= on the docker command. Comma separated. type: string\ndrop_invocation_pk_cols: false # If true, attempt to drop invocation PK cols type: bool\ngrpc_port: 1985 # The port to listen for gRPC traffic on type: int\ngrpcs_port: 1986 # The port to listen for gRPCS traffic on type: int\nlisten: 0.0.0.0 # The interface to listen on (default: 0.0.0.0) type: string\nmax_shutdown_duration: 25s # Time to wait for shutdown type: time.Duration\nmonitoring_port: 9090 # The port to listen for monitoring traffic on type: int\npodman_runtime: "" # Enables running podman with other runtimes, like gVisor (runsc). type: string\nport: 8080 # The port to listen for HTTP traffic on type: int\nredis_command_buffer_flush_period: 250ms # How long to wait between flushing buffered redis commands. Setting this to 0 will disable buffering at the cost of higher redis QPS. type: time.Duration\nserver_type: prod-buildbuddy-executor # The server type to match on health checks type: string\nzone_override: "" # A value that will override the auto-detected zone. Ignored if empty type: string\n\n# Structured settings\n\napp:\n    build_buddy_url: http://localhost:8080 # The external URL where your BuildBuddy instance can be found. type: URL\n    cache_api_url: "" # Overrides the default remote cache protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    default_redis_target: "" # A Redis target for storing remote shared state. To ease migration, the redis target from the remote execution config will be used if this value is not specified. type: string\n    default_sharded_redis:\n        password: "" # Redis password type: string\n        shards: [] # Ordered list of Redis shard addresses. type: []string\n        username: "" # Redis username type: string\n    enable_prometheus_histograms: true # If true, collect prometheus histograms for all RPCs type: bool\n    enable_structured_logging: false # If true, log messages will be json-formatted. type: bool\n    events_api_url: "" # Overrides the default build event protocol gRPC address shown by BuildBuddy on the configuration screen. type: URL\n    grpc_max_recv_msg_size_bytes: 50000000 # Configures the max GRPC receive message size [bytes] type: int\n    grpc_over_http_port_enabled: false # Cloud-Only type: bool\n    ignore_forced_tracing_header: false # If set, we will not honor the forced tracing header. type: bool\n    log_enable_gcp_logging_format: false # If true, the output structured logs will be compatible with format expected by GCP Logging. type: bool\n    log_error_stack_traces: false # If true, stack traces will be printed for errors that have them. type: bool\n    log_include_short_file_name: false # If true, log messages will include shortened originating file name. type: bool\n    log_level: info # The desired log level. Logs with a level >= this level will be emitted. One of {\'fatal\', \'error\', \'warn\', \'info\', \'debug\'} type: string\n    trace_fraction: 0 # Fraction of requests to sample for tracing. type: float64\n    trace_fraction_overrides: [] # Tracing fraction override based on name in format name=fraction. type: []string\n    trace_jaeger_collector: "" # Address of the Jager collector endpoint where traces will be sent. type: string\n    trace_project_id: "" # Optional GCP project ID to export traces to. If not specified, determined from default credentials or metadata server if running on GCP. type: string\n    trace_service_name: "" # Name of the service to associate with traces. type: string\nauth:\n    admin_group_id: "" # ID of a group whose members can perform actions only accessible to server admins. type: string\n    api_key_group_cache_ttl: 5m0s # TTL for API Key to Group caching. Set to \'0\' to disable cache. type: time.Duration\n    disable_refresh_token: false # If true, the offline_access scope which requests refresh tokens will not be requested. type: bool\n    enable_anonymous_usage: false # If true, unauthenticated build uploads will still be allowed but won\'t be associated with your organization. type: bool\n    enable_self_auth: false # If true, enables a single user login via an oauth provider on the buildbuddy server. Recommend use only when server is behind a firewall; this option may allow anyone with access to the webpage admin rights to your buildbuddy installation. ** Enterprise only ** type: bool\n    https_only_cookies: false # If true, cookies will only be set over https connections. type: bool\n    jwt_key: set_the_jwt_in_config # The key to use when signing JWT tokens. type: string\n    oauth_providers: [] # The list of oauth providers to use to authenticate. type: []auth.OauthProvider\n    # e.g.,\n    # - issuer_url: "" # The issuer URL of this OIDC Provider. type: string\n    #   client_id: "" # The oauth client ID. type: string\n    #   client_secret: "" # The oauth client secret. type: string\n    #   slug: "" # The slug of this OIDC Provider. type: string\ncache:\n    detailed_stats_enabled: false # Whether to enable detailed stats recording for all cache requests. type: bool\n    enable_query_write_status_cache_check: false # If enabled, QueryWriteStatus ByteStream RPC will check whether digest is present in the cache. type: bool\n    enable_tree_caching: true # If true, cache GetTree responses (full and partial) type: bool\n    gcs:\n        bucket: "" # The name of the GCS bucket to store cache files in. type: string\n        credentials_file: "" # A path to a JSON credentials file that will be used to authenticate to GCS. type: string\n        project_id: "" # The Google Cloud project ID of the project owning the above credentials and GCS bucket. type: string\n        ttl_days: 0 # The period after which cache files should be TTLd. Disabled if 0. type: int64\n    memcache_targets: [] # Deprecated. Use Redis Target instead. type: []string\n    redis:\n        max_value_size_bytes: 10000000 # The maximum value size to cache in redis (in bytes). type: int64\n        redis_target: "" # A redis target for improved Caching/RBE performance. Target can be provided as either a redis connection URI or a host:port pair. URI schemas supported: redis[s]://[[USER][:PASSWORD]@][HOST][:PORT][/DATABASE] or unix://[[USER][:PASSWORD]@]SOCKET_PATH[?db=DATABASE] ** Enterprise only ** type: string\n        sharded:\n            password: "" # Redis password type: string\n            shards: [] # Ordered list of Redis shard addresses. type: []string\n            username: "" # Redis username type: string\n    redis_target: "" # A redis target for improved Caching/RBE performance. Target can be provided as either a redis connection URI or a host:port pair. URI schemas supported: redis[s]://[[USER][:PASSWORD]@][HOST][:PORT][/DATABASE] or unix://[[USER][:PASSWORD]@]SOCKET_PATH[?db=DATABASE] ** Enterprise only ** type: string\n    s3:\n        bucket: "" # The AWS S3 bucket to store files in. type: string\n        credentials_profile: "" # A custom credentials profile to use. type: string\n        disable_ssl: false # Disables the use of SSL, useful for configuring the use of MinIO. type: bool\n        endpoint: "" # The AWS endpoint to use, useful for configuring the use of MinIO. type: string\n        region: "" # The AWS region. type: string\n        role_arn: "" # The role ARN to use for web identity auth. type: string\n        role_session_name: "" # The role session name to use for web identity auth. type: string\n        s3_force_path_style: false # Force path style urls for objects, useful for configuring the use of MinIO. type: bool\n        static_credentials_id: "" # Static credentials ID to use, useful for configuring the use of MinIO. type: string\n        static_credentials_secret: "" # Static credentials secret to use, useful for configuring the use of MinIO. type: string\n        static_credentials_token: "" # Static credentials token to use, useful for configuring the use of MinIO. type: string\n        ttl_days: 0 # The period after which cache files should be TTLd. Disabled if 0. type: int64\n        web_identity_token_file: "" # The file path to the web identity token file. type: string\n    tree_cache_seed: treecache # If set, hash this with digests before caching / reading from tree cache type: string\n    zstd_transcoding_enabled: false # Whether to accept requests to read/write zstd-compressed blobs, compressing/decompressing outgoing/incoming blobs on the fly. type: bool\nexecutor:\n    api_key: "" # API Key used to authorize the executor with the BuildBuddy app server. type: string\n    app_target: grpcs://remote.buildbuddy.io # The GRPC url of a buildbuddy app server. type: string\n    container_registries: [] # type: []container.ContainerRegistry\n    # e.g.,\n    # - hostnames: [] # type: []string\n    #   username: "" # type: string\n    #   password: "" # type: string\n\n    context_based_shutdown_enabled: false # Whether to remove runners using context cancelation. This is a transitional flag that will be removed in a future executor version. type: bool\n    default_image: gcr.io/flame-public/executor-docker-default:enterprise-v1.6.0 # The default docker image to use to warm up executors or if no platform property is set. Ex: gcr.io/flame-public/executor-docker-default:enterprise-v1.5.4 type: string\n    default_isolation_type: "" # The default workload isolation type when no type is specified in an action. If not set, we use the first of the following that is set: docker, firecracker, podman, or barerunner type: string\n    default_xcode_version: "" # Sets the default Xcode version number to use if an action doesn\'t specify one. If not set, /Applications/Xcode.app/ is used. type: string\n    disable_local_cache: false # If true, a local file cache will not be used. type: bool\n    docker_devices: [] # Configure (docker) devices that will be available inside the sandbox container. Format is --executor.docker_devices=\'[{"PathOnHost":"/dev/foo","PathInContainer":"/some/dest","CgroupPermissions":"see,docker,docs"}]\' type: []container.DockerDeviceMapping\n    # e.g.,\n    # - path_on_host: "" # path to device that should be mapped from the host. type: string\n    #   path_in_container: "" # path under which the device will be present in container. type: string\n    #   cgroup_permissions: "" # cgroup permissions that should be assigned to device. type: string\n\n    docker_inherit_user_ids: false # If set, run docker containers using the same uid and gid as the user running the executor process. type: bool\n    docker_mount_mode: "" # Sets the mount mode of volumes mounted to docker images. Useful if running on SELinux https://www.projectatomic.io/blog/2015/06/using-volumes-with-docker-can-cause-problems-with-selinux/ type: string\n    docker_net_host: false # Sets --net=host on the docker command. Intended for local development only. type: bool\n    docker_sibling_containers: false # If set, mount the configured Docker socket to containers spawned for each action, to enable Docker-out-of-Docker (DooD). Takes effect only if docker_socket is also set. Should not be set by executors that can run untrusted code. type: bool\n    docker_socket: "" # If set, run execution commands in docker using the provided socket. type: string\n    docker_volumes: [] # Additional --volume arguments to be passed to docker or podman. type: []string\n    enable_bare_runner: false # Enables running execution commands directly on the host without isolation. type: bool\n    enable_firecracker: false # Enables running execution commands inside of firecracker VMs type: bool\n    enable_podman: false # Enables running execution commands inside podman container. type: bool\n    enable_sandbox: false # Enables running execution commands inside of sandbox-exec. type: bool\n    enable_vfs: false # Whether FUSE based filesystem is enabled. type: bool\n    exclusive_task_scheduling: false # If true, only one task will be scheduled at a time. Default is false type: bool\n    extra_env_vars: [] # Additional environment variables to pass to remotely executed actions. i.e. MY_ENV_VAR=foo type: []string\n    firecracker_mount_workspace_file: false # Enables mounting workspace filesystem to improve performance of copying action outputs. type: bool\n    host_root_directory: "" # Path on the host where the executor container root directory is mounted. type: string\n    local_cache_directory: /tmp/buildbuddy/filecache # A local on-disk cache directory. Must be on the same device (disk partition, Docker volume, etc.) as the configured root_directory, since files are hard-linked to this cache for performance reasons. Otherwise, \'Invalid cross-device link\' errors may result. type: string\n    local_cache_size_bytes: 1000000000 # The maximum size, in bytes, to use for the local on-disk cache type: int64\n    memory_bytes: 0 # Optional maximum memory to allocate to execution tasks (approximate). Cannot set both this option and the SYS_MEMORY_BYTES env var. type: int64\n    millicpu: 0 # Optional maximum CPU milliseconds to allocate to execution tasks (approximate). Cannot set both this option and the SYS_MILLICPU env var. type: int64\n    podman:\n        cpu_usage_path_template: /sys/fs/cgroup/cpuacct/libpod_parent/libpod-{{.ContainerID}}/cpuacct.usage # Go template specifying a path pointing to a container\'s total CPU usage, in CPU nanoseconds. Templated with `ContainerID`. type: string\n        enable_stats: false # Whether to enable cgroup-based podman stats. type: bool\n        image_streaming:\n            registry_grpc_target: "" # gRPC endpoint of BuildBuddy registry type: string\n            registry_http_target: "" # HTTP endpoint of the BuildBuddy registry type: string\n        memory_usage_path_template: /sys/fs/cgroup/memory/libpod_parent/libpod-{{.ContainerID}}/memory.usage_in_bytes # Go template specifying a path pointing to a container\'s current memory usage, in bytes. Templated with `ContainerID`. type: string\n    pool: "" # Executor pool name. Only one of this config option or the MY_POOL environment variable should be specified. type: string\n    root_directory: /tmp/buildbuddy/remote_build # The root directory to use for build files. type: string\n    route_prefix: default # The prefix in the ip route to locate a device: either \'default\' or the ip range of the subnet e.g. 172.24.0.0/18 type: string\n    runner_pool:\n        max_runner_count: 0 # Maximum number of recycled RBE runners that can be pooled at once. Defaults to a value derived from estimated CPU usage, max RAM, allocated CPU, and allocated memory. type: int\n        max_runner_disk_size_bytes: 16000000000 # Maximum disk size for a recycled runner; runners exceeding this threshold are not recycled. Defaults to 16GB. type: int64\n        max_runner_memory_usage_bytes: 8000000000 # Maximum memory usage for a recycled runner; runners exceeding this threshold are not recycled. Defaults to 1/10 of total RAM allocated to the executor. (Only supported for Docker-based executors). type: int64\n    shutdown_cleanup_duration: 15s # The minimum duration during the shutdown window to allocate for cleaning up containers. This is capped to the value of `max_shutdown_duration`. type: time.Duration\n    startup_warmup_max_wait_secs: 0 # Maximum time to block startup while waiting for default image to be pulled. Default is no wait. type: int64\n    warmup_timeout_secs: 120 # The default time (in seconds) to wait for an executor to warm up i.e. download the default docker image. Default is 120s type: int64\nremote_execution:\n    enable_remote_exec: true # If true, enable remote-exec. ** Enterprise only ** type: bool\n    redis_target: "" # A Redis target for storing remote execution state. Falls back to app.default_redis_target if unspecified. Required for remote execution. To ease migration, the redis target from the cache config will be used if neither this value nor app.default_redis_target are specified. type: string\n    sharded_redis:\n        password: "" # Redis password type: string\n        shards: [] # Ordered list of Redis shard addresses. type: []string\n        username: "" # Redis username type: string\n    use_measured_task_sizes: false # Whether to use measured usage stats to determine task sizes. type: bool\nssl:\n    upgrade_insecure: false # True if http requests should be redirected to https type: bool\n')))}h.isMDXComponent=!0;var y=["components"],g={id:"config-options-listings",title:"Listings For All BuildBuddy Options",sidebar_label:"Options Listings"},b=void 0,_={unversionedId:"config-options-listings",id:"config-options-listings",title:"Listings For All BuildBuddy Options",description:"Provided below are working, documented YAML configs for each BuildBuddy binary",source:"@site/../docs/config-options-listings.mdx",sourceDirName:".",slug:"/config-options-listings",permalink:"/docs/config-options-listings",editUrl:"https://github.com/buildbuddy-io/buildbuddy/edit/master/docs/../docs/config-options-listings.mdx",tags:[],version:"current",lastUpdatedBy:"Zoey Greer",lastUpdatedAt:1656601597,formattedLastUpdatedAt:"6/30/2022",frontMatter:{id:"config-options-listings",title:"Listings For All BuildBuddy Options",sidebar_label:"Options Listings"},sidebar:"someSidebar",previous:{title:"Flags",permalink:"/docs/config-flags"}},m=[{value:"BuildBuddy Server (FOSS)",id:"buildbuddy-server-foss",children:[],level:3},{value:"BuildBuddy Server (Enterprise)",id:"buildbuddy-server-enterprise",children:[],level:3},{value:"BuildBuddy Executor",id:"buildbuddy-executor",children:[],level:3}],w={toc:m};function k(e){var t=e.components,n=(0,r.Z)(e,y);return(0,i.kt)("wrapper",(0,o.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provided below are working, documented YAML configs for each BuildBuddy binary\ncontaining every option that that binary accepts, each set to the default value\nfor that option. Any option that can be specified in the YAML config can also be\npassed on the command line. For nested options, be sure to write out the full\nYAML path, with a ",(0,i.kt)("inlineCode",{parentName:"p"},".")," separating each part."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"storage:\n    disk:\n        root_directory: /tmp/buildbuddy\n")),(0,i.kt)("p",null,"becomes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'buildbuddy -storage.disk.root_directory="/tmp/buildbuddy"\n')),(0,i.kt)("p",null,"For specifying lists of structures using flags on the command line, use the JSON\nrepresentation of the list you wish to concatenate to the end or the element you\nwish to append:"),(0,i.kt)("p",null,"For example, given the following schema:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'cache:\n    disk:\n        partitions: [] # type: []disk.Partition\n        # e.g.:\n        # - id: "" # type: string\n        #   max_size_bytes: 0 # type: int\n')),(0,i.kt)("p",null,"We see that ",(0,i.kt)("inlineCode",{parentName:"p"},"cache.disk.partitions")," is configured as a list of ",(0,i.kt)("inlineCode",{parentName:"p"},"disk.Partition"),". In YAML, we'd normally configure it like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'cache:\n    disk:\n        partitions: [] # type: []disk.Partition\n        - id: "1GB"\n          max_size_bytes: 1073741824\n        - id: "2GB":\n          max_size_bytes: 2147483648\n')),(0,i.kt)("p",null,"The flag equivalent of this example would be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'buildbuddy -cache.disk.partitions=\'{"id": "1GB", "max_size_bytes": 1073741824}\' -cache.disk.partitions=\'{"id": "2GB", "max_size_bytes": 2147483648}\'\n')),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'buildbuddy -cache.disk.partitions=\'[{"id": "1GB", "max_size_bytes": 1073741824}, {"id": "2GB", "max_size_bytes": 2147483648}]\'\n')),(0,i.kt)("h3",{id:"buildbuddy-server-foss"},"BuildBuddy Server (FOSS)"),(0,i.kt)(l,{mdxType:"FreeServerConfig"}),(0,i.kt)("h3",{id:"buildbuddy-server-enterprise"},"BuildBuddy Server (Enterprise)"),(0,i.kt)(u,{mdxType:"EnterpriseServerConfig"}),(0,i.kt)("h3",{id:"buildbuddy-executor"},"BuildBuddy Executor"),(0,i.kt)(h,{mdxType:"ExecutorConfig"}))}k.isMDXComponent=!0}}]);